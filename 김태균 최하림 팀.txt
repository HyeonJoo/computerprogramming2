#include<iostream>
#include<list>
#include<string>
using namespace std;

typedef struct Writing{
	Writing(string name, string buf, int num){
		Name = name; Buf = buf;	Num = num;
	}
	string Name;  string Buf;	int Num;
}W;

void main(){

	list<W>Wlist; //위에서 Writing을 W로 정의했음. W 리스트를 만들었다!
	list<W>::iterator iterEnd = Wlist.end(); // 반복자 iterator 정의. 뭐 찾을때나 삭제할 때 필요!
	int menu; //메뉴 선택할 변수
	int Nm = 0;
	while (1){
		//임시로 쓸 변수들 
		string tmpName; string tmpBuf;	

		cout << "**********************\n";
		cout << "1.게시글 쓰기\n"; //데이터 삽입
		cout << "2.쓴 게시글\n"; //데이터 출력
		cout << "3.게시글 삭제(수정)\n"; //데이터 삭제
		cout << "4.프로그램 종료\n"; //클래스로 만들지 안 만들지는 일단 보류 ->사족일 가능성이 높다.
		cout << "**********************\n";
		cout << "메뉴를 입력하시오:\n"; fflush(stdin);  //버퍼 없애는 안전장치. 해 놓으면 좋음!
		cin >> menu;


		if (menu == 1){
			cout << "*******게시글 작성*******\n";
			
			Nm++; //글 번호
			cout << "작성자 입력:";		fflush(stdin); getline(cin, tmpName, '\n');
			cout << "게시글 작성:";		fflush(stdin);	getline(cin, tmpBuf, '\n');
			W w1(tmpName, tmpBuf, Nm);
			Wlist.push_back(w1); //뒤에서 부터 push해야 처음에 작성한 글이 리스트 링크 맨 앞에 있게 됨!
			/*

			*/
		}
		else if (menu == 2){
			cout << "*******게시글 보기********\n";
			for (list<W>::iterator Pos = Wlist.begin(); Pos != iterEnd; ++Pos){
				cout << "게시글 번호:" << Pos->Num << endl;
				cout << "글쓴이:" << Pos->Name << endl;
				cout << "글:" << Pos->Buf << endl;
			};
			/*
			
			*/
		}
		else if (menu == 3){
			cout << "*******게시글 수정/삭제***\n";
			//처음 쓴 게시글부터 순차적을 삭제

			list<W>::iterator iterPos = Wlist.begin();
			cout << iterPos->Num << "번째 게시글을 삭제합니다!" << endl;
			Wlist.erase(iterPos, ++Wlist.begin());
			cout << endl;
			/*

			*/
		}
		else if (menu == 4){
			cout << "프로그램을 종료합니다" << endl;
			Wlist.clear(); //리스트 없애기 
			//delete
			system("pause"); system("cls");
			exit(0);
		}
		else{
			cout << "메뉴를 다시 입력하시오\n";
		}



	}//while over




}
