#include<iostream>
#include<list>
#include<string>
#include<xstring>
using namespace std;

static int Stnum = 0;

typedef struct Writing{
	Writing(string name, string buf, int num){
		Name = name; Buf = buf;	Num = num;
	}
	string Name;  string Buf;	int Num; //이름, 게시글, 번호
}W;


void main(){
	
	list<W>Wlist; //위에서 Writing을 W로 정의했음. W 리스트를 만들었다!
	list<W>::iterator iterEnd = Wlist.end(); // 반복자 iterator 정의. 뭐 찾을때나 삭제할 때 필요!
	int menu; //메뉴 선택할 변수
	int Nm = 0;
	while (1){
		//임시로 쓸 변수들 
	B:;
		string tmpName; string tmpBuf;	
		cout << "**********************\n";
		cout << "1.게시글 쓰기\n"; //데이터 삽입
		cout << "2.쓴 게시글\n"; //데이터 출력
		cout << "3.게시글 삭제\n"; //데이터 삭제
		cout << "4.프로그램 종료\n"; //클래스로 만들지 안 만들지는 일단 보류 ->사족일 가능성이 높다.
		cout << "**********************\n";
		cout << "메뉴를 입력하시오:\n"; fflush(stdin);  //버퍼 없애는 안전장치. 해 놓으면 좋음!
		cin >> menu;


		if (menu == 1){
			Stnum++;
			cout << "*******게시글 작성*******\n";
			
			Nm++; //글 번호
			cout << "작성자 입력:";		fflush(stdin); getline(cin, tmpName, '\n');
			cout << "게시글 작성:";		fflush(stdin);	getline(cin, tmpBuf, '\n');
			W w1(tmpName, tmpBuf, Nm);
			Wlist.push_back(w1); //뒤에서 부터 push해야 처음에 작성한 글이 리스트 링크 맨 앞에 있게 됨!
			/*

			*/
		}
		else if (menu == 2){
		A:;
			if (Stnum == 0){
				cout << "저장된 데이터가 없습니다 데이터를 입력하세요" << endl;
				goto B;
			}
			cout << "*******게시글 보기********\n";
			int tmp = 0;
			cout << "1. 전체 보기" << endl << "2. 선택한 작성자 게시글 보기" << endl << "3. 번호로 게시글 보기" << endl;
			cout << "메뉴선택:";	fflush(stdin); cin >> tmp;
			if (tmp == 1){ //전부 보여주기 
				for (list<W>::iterator Pos = Wlist.begin(); Pos != iterEnd; ++Pos){
					cout << "게시글 번호:" << Pos->Num << endl;
					cout << "글쓴이:" << Pos->Name << endl;
					cout << "글:" << Pos->Buf << endl;
				}
			} //작성자 별 게시글 찾기 
			else if (tmp == 2){
				
				cout << "검색할 글쓴이의 이름을 입력하시오:";
				string tmpname = "";
				fflush(stdin); cin >> tmpname;
				for (list<W>::iterator Pos = Wlist.begin(); Pos != iterEnd; ++Pos){
					if (Pos->Name == tmpname){
						cout << "게시글 번호:" << Pos->Num << endl;
						cout << "글쓴이:" << Pos->Name << endl;
						cout << "글:" << Pos->Buf << endl;
					}
				}//for over
			}//tmp==2
			else if (tmp == 3){
				 
				cout << "검색할 게시글 번호를 입력하시오:";		int num;	fflush(stdin); cin >> num;
				for (list<W>::iterator Pos = Wlist.begin(); Pos != iterEnd; Pos++){
					if (Pos->Num == num){
						cout << "게시글 번호:" << Pos->Num << endl;
						cout << "글쓴이:" << Pos->Name << endl;
						cout << "글:" << Pos->Buf << endl;
					}//if over
				}//for over
			}//tmp==3
			else{
				cout << "다시 선택하시오" << endl;
				goto A;
			}
		}
		else if (menu == 3){
			if (Stnum == 0){
				cout << "저장된 데이터가 없습니다. 데이터를 입력하세요" << endl;
				goto B;
			}
			cout << "*******게시글 삭제***\n";
			//처음 쓴 게시글부터 순차적을 삭제
			cout << "1. 전체 삭제  2. 지정 삭제" << endl;
			int nm3 = 0;
			cout << "입력: ";	fflush(stdin); cin >> nm3;
			if (nm3 == 1){
				cout << "전체 글을 삭제합니다! " << endl;
				list<W>::iterator iterPos = Wlist.begin();
				cout << iterPos->Num << "번째 게시글을 삭제합니다!" << endl;
				Wlist.erase(iterPos, ++Wlist.begin());
				cout << endl;
			}
			else if (nm3 == 2){
				cout << "1. 입력한 작성자 게시글 삭제  2. 입력한 번호 게시글 삭제" << endl;
				cout << "입력:"; fflush(stdin); cin >> nm3;
				if (nm3 == 1){
					string nametmp;					
					cout << "삭제할 게시글 작성자 이름:"; fflush(stdin); getline(cin, nametmp, '\n');
					for (list<W>::iterator it = Wlist.begin(); it != iterEnd; it++){
						if (it->Name == nametmp){
							it = Wlist.erase(it);
						}
						else{
							cout << "입력하신 이름은 존재하지 않습니다" << endl;
							break;
						}//존재하지 않을때
					}//for문 
					
				}//이름별 삭제
				else if (nm3 == 2){
					int nm32 = 0;
					cout << "삭제할 게시글 번호:"; fflush(stdin); cin >> nm32;
					for (list<W>::iterator pt = Wlist.begin(); pt != iterEnd; pt++){
						if (pt->Num == nm32){
							pt = Wlist.erase(pt);
						}
						else{
							cout << "입력하신 게시글 번호는 존재하지 않습니다" << endl;
							break;
						}
					}//for문
				
				}//게시글 번호별 삭제
			}//지정 삭제일 경우
			else{
				cout << "잘못 입력하셨습니다\n";
			}
			/*

			*/
		}
		else if (menu == 4){
			cout << "프로그램을 종료합니다" << endl;
			Wlist.clear(); //리스트 없애기 
			//delete
			system("pause"); system("cls");
			exit(0);
		}
		else{
			cout << "메뉴를 다시 입력하시오\n";
		}



	}//while over




}
